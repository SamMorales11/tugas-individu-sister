# .env file untuk Konfigurasi Sistem Terdistribusi (Tugas Individu Sister)

# =========================================================================
# KONFIGURASI UMUM DOCKER (DIGUNAKAN UNTUK SEMUA PROYEK)
# =========================================================================

# Base Image Python yang Digunakan di Semua Dockerfile
PYTHON_IMAGE=python:3.9-slim

# Jumlah Node dalam Cluster (N)
# Catatan: Setting ini TIDAK digunakan di docker-compose.yml,
# tapi berguna untuk dokumentasi dan jika kita menggunakan script scaling.
CLUSTER_SIZE=3

# =========================================================================
# KONFIGURASI PROYEK LOCK MANAGER (RAFT)
# =========================================================================

# Port Raft (Internal RPC communication)
# Node 1: 7000, Node 2: 7001, Node 3: 7002
RAFT_PORT=7000
RAFT_ADDR_1=lock-node-1:${RAFT_PORT}
RAFT_ADDR_2=lock-node-2:${RAFT_PORT}
RAFT_ADDR_3=lock-node-3:${RAFT_PORT}
ALL_RAFT_PEERS=${RAFT_ADDR_1},${RAFT_ADDR_2},${RAFT_ADDR_3}

# Port HTTP API Lock Manager (Eksternal Client Access)
# Node 1: 8000, Node 2: 8001, Node 3: 8002
HTTP_PORT_1=8000
HTTP_PORT_2=8001
HTTP_PORT_3=8002
ALL_HTTP_PEERS=lock-node-1:${HTTP_PORT_1},lock-node-2:${HTTP_PORT_2},lock-node-3:${HTTP_PORT_3}


# =========================================================================
# KONFIGURASI PROYEK QUEUE SYSTEM (PERSISTENCE)
# =========================================================================

# Port API Queue (Sama dengan Lock Manager, tapi di jaringan berbeda)
QUEUE_HTTP_PORT_1=8000
QUEUE_HTTP_PORT_2=8001
QUEUE_HTTP_PORT_3=8002

QUEUE_PEERS=queue-node-1:${QUEUE_HTTP_PORT_1},queue-node-2:${QUEUE_HTTP_PORT_2},queue-node-3:${QUEUE_HTTP_PORT_3}


# =========================================================================
# KONFIGURASI PROYEK CACHE (MESI)
# =========================================================================

CACHE_HTTP_PORT_1=8000
CACHE_HTTP_PORT_2=8001
CACHE_HTTP_PORT_3=8002

# Kapasitas Cache (untuk LRU)
CACHE_CAPACITY=10